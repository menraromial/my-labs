
#!/bin/bash

echo "======================================================================"
echo "üîç DIAGNOSTIC COMPLET: Prometheus ‚Üî Kepler"
echo "======================================================================"

echo ""
echo "--- 1. V√©rification des Pods Kepler ---"
kubectl get pods -n kepler -o wide

echo ""
echo "--- 2. V√©rification du Service Kepler ---"
kubectl get svc -n kepler -o wide

echo ""
echo "--- 3. V√©rification des Labels du Service Kepler ---"
echo "Les labels sont CRITIQUES pour que le ServiceMonitor fonctionne!"
kubectl get svc -n kepler -o yaml | grep -A 10 "labels:"

echo ""
echo "--- 4. V√©rification du ServiceMonitor Kepler ---"
kubectl get servicemonitor -n kepler -o wide

echo ""
echo "--- 5. D√©tails du ServiceMonitor (selector et labels) ---"
kubectl get servicemonitor -n kepler -o yaml | grep -A 20 "selector:"

echo ""
echo "--- 6. V√©rification que Prometheus-Operator voit le ServiceMonitor ---"
echo "Prometheus doit √™tre dans le m√™me namespace ou avec les bonnes r√®gles RBAC"
kubectl get servicemonitor -A

echo ""
echo "--- 7. Configuration de Prometheus pour ServiceMonitor ---"
echo "V√©rification des serviceMonitorSelector dans Prometheus:"
kubectl get prometheus -n monitoring -o yaml | grep -A 5 "serviceMonitorSelector:"

echo ""
echo "--- 8. V√©rification des Endpoints Kepler ---"
echo "Si pas d'endpoints, le service ne pointe vers rien!"
kubectl get endpoints -n kepler

echo ""
echo "--- 9. Test direct du endpoint Kepler ---"
KEPLER_POD=`kubectl get pods -n kepler -l app.kubernetes.io/name=kepler -o jsonpath='{.items[0].metadata.name}'`
if [ -n "$KEPLER_POD" ]; then
    echo "Test de l'endpoint metrics sur le pod $KEPLER_POD:"
    kubectl exec -n kepler $KEPLER_POD -- curl -s localhost:9102/metrics | head -20
else
    echo "‚ùå Aucun pod Kepler trouv√©!"
fi

echo ""
echo "--- 10. V√©rification des Logs Prometheus ---"
echo "Recherche d'erreurs li√©es √† Kepler dans les logs Prometheus:"
PROM_POD=`kubectl get pods -n monitoring -l app.kubernetes.io/name=prometheus -o jsonpath='{.items[0].metadata.name}'`
if [ -n "$PROM_POD" ]; then
    kubectl logs -n monitoring $PROM_POD -c prometheus --tail=50 | grep -i kepler || echo "Aucune mention de Kepler dans les logs r√©cents"
else
    echo "‚ùå Pod Prometheus non trouv√©!"
fi

echo ""
echo "--- 11. Configuration Actuelle des Targets Prometheus ---"
echo "V√©rifiez si Kepler appara√Æt dans les targets de Prometheus"
echo "üí° Acc√©dez √† l'UI Prometheus: Status ‚Üí Targets"
echo "üí° Ou utilisez l'API: curl http://prometheus-ip:port/api/v1/targets"

echo ""
echo "======================================================================"
echo "üéØ CAUSES COMMUNES ET SOLUTIONS:"
echo "======================================================================"
echo ""
echo "‚ùå PROBL√àME 1: Labels incompatibles"
echo "   Le ServiceMonitor cherche des labels sp√©cifiques sur le Service"
echo "   Solution: V√©rifiez que les labels du Service matchent le selector du ServiceMonitor"
echo ""
echo "‚ùå PROBL√àME 2: Namespace incorrect"
echo "   Le ServiceMonitor doit √™tre dans un namespace que Prometheus surveille"
echo "   Solution: Soit mettre le ServiceMonitor dans 'monitoring', soit configurer Prometheus"
echo ""
echo "‚ùå PROBL√àME 3: serviceMonitorSelector vide"
echo "   Prometheus n'est configur√© pour surveiller AUCUN ServiceMonitor"
echo "   Solution: Configurer prometheus.serviceMonitorSelector: {}"
echo ""
echo "‚ùå PROBL√àME 4: Port incorrect"
echo "   Le ServiceMonitor pointe vers un port qui n'existe pas"
echo "   Solution: V√©rifier que le port dans ServiceMonitor = port du Service"
echo ""
echo "======================================================================"
