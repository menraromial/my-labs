apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: kepler
  namespace: kepler
  labels:
    app.kubernetes.io/name: kepler
    app.kubernetes.io/part-of: kepler
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: kepler
  template:
    metadata:
      labels:
        app.kubernetes.io/name: kepler
        app.kubernetes.io/part-of: kepler
    spec:
      serviceAccountName: kepler
      hostPID: true
      tolerations:
        - key: node-role.kubernetes.io/control-plane
          operator: Exists
          effect: NoSchedule
        - key: node-role.kubernetes.io/master
          operator: Exists
          effect: NoSchedule
      containers:
        - name: kepler
          image: quay.io/sustainable_computing_io/kepler:latest
          imagePullPolicy: Always
          securityContext:
            privileged: true
          command:
            - /usr/bin/kepler
          args:
            - --config.file=/etc/kepler/config.yaml
            - --kube.enable
            - --kube.node-name=$(NODE_NAME)
          ports:
            - name: http
              containerPort: 28282
              protocol: TCP
          volumeMounts:
            - name: sysfs
              mountPath: /host/sys
              readOnly: true
            - name: procfs
              mountPath: /host/proc
              readOnly: true
            - name: cfm
              mountPath: /etc/kepler/config.yaml
              subPath: config.yaml
              readOnly: true
          livenessProbe:
            httpGet:
              path: /metrics
              port: http
            initialDelaySeconds: 10
            periodSeconds: 60
          env:
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: spec.nodeName
      volumes:
        - name: sysfs
          hostPath:
            path: /sys
        - name: procfs
          hostPath:
            path: /proc
        - name: cfm
          configMap:
            name: kepler
